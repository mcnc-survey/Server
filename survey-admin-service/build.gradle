plugins {
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

configurations {
	asciidoctorExt
}

ext {
	set('springCloudVersion', "2023.0.3")
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.cloud:spring-cloud-config-client'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	runtimeOnly 'org.postgresql:postgresql'
	//	flyway
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	implementation 'org.apache.commons:commons-lang3'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// redis 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.12.5'

	// aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//vault
	implementation 'org.springframework.vault:spring-vault-core:3.1.2'

	// asciidoctor
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
}

tasks.register("restDocsTest", Test) {
	outputs.dir snippetsDir
	useJUnitPlatform {
		includeTags("restDocs")
	}

	finalizedBy "asciidoctor"
}

tasks.named("asciidoctor") {
	dependsOn restDocsTest

	inputs.dir snippetsDir
	configurations "asciidoctorExt"
	baseDirFollowsSourceDir()
}

tasks.register('copyAsciidocHTML', Copy) {
	dependsOn asciidoctor
	from "${asciidoctor.outputDir}"
	into "${project.rootDir}/src/main/resources/static/docs"
}