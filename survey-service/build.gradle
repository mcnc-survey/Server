plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

configurations {
    asciidoctorExt
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.springframework.cloud:spring-cloud-config-client'

    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//    open feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //	flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
}

tasks.register("restDocsTest", Test) {
    outputs.dir snippetsDir
    useJUnitPlatform {
        includeTags("restDocs")
    }

    finalizedBy "asciidoctor"
}

tasks.named("asciidoctor") {
    dependsOn restDocsTest

    inputs.dir snippetsDir
    configurations "asciidoctorExt"
    baseDirFollowsSourceDir()
}

tasks.register('copyAsciidocHTML', Copy) {
    dependsOn asciidoctor
    from "${asciidoctor.outputDir}"
    into "${project.rootDir}/src/main/resources/static/docs"
}
