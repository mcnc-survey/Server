plugins {
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "2023.0.3")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.2' //이메일 발송

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// asciidoctor
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs << '-parameters'
}


tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.register("restDocsTest", Test) {
	outputs.dir snippetsDir
	useJUnitPlatform {
		includeTags("restDocs")
	}

	finalizedBy "asciidoctor"
}

tasks.named("asciidoctor") {
	dependsOn restDocsTest

	inputs.dir snippetsDir
	configurations "asciidoctorExt"
	baseDirFollowsSourceDir()
}

tasks.register('copyAsciidocHTML', Copy) {
	dependsOn asciidoctor
	from "${asciidoctor.outputDir}"
	into "${project.rootDir}/src/main/resources/static/docs"
}